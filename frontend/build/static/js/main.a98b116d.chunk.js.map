{"version":3,"sources":["createreview.module.css","ReviewStyle.module.css","SearchBar.tsx","ReviewComponent.tsx","DormPage.tsx","HomePage.tsx","Authenticated.tsx","CreateReview.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","SearchBar","searchQuery","handleFilterTextChange","hasAC","handleACCheckBoxChange","hasSingles","handleSinglesCheckBoxChange","hasDoubles","handleDoublesCheckBoxChange","hasTriples","handleTriplesCheckBoxChange","hasQuads","handleQuadsCheckBoxChange","hasSuites","handleSuitesCheckBoxChange","hasPods","handlePodsCheckBoxChange","hasCorridors","handleCorridorsCheckBoxChange","hasElevators","handleElevatorsCheckBoxChange","hasDining","handleDiningCheckBoxChange","type","placeholder","value","onChange","event","target","checked","ReviewComponent","cleanliness","convenience","lounges","noise","quality","social","year","review","localUserID","userID","postID","dormName","reviews","setReviews","deleteReview","a","axios","delete","oldReviews","newReviews","filter","x","console","log","overallRating","Number","parseInt","toFixed","className","styles","style","borderColor","onClick","DormPage","setReview","useEffect","document","title","fetch","then","res","json","data","length","DormMap","get","name","location","src","picLink","alt","residents","singles","doubles","triples","quads","suites","pods","corridors","ac","elevators","dining","href","housingWebsite","reduce","sum","curr","map","idx","getAuth","currentUser","uid","HomePage","handleClick","searchFilter","DormArray","toLowerCase","includes","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","Authenticated","children","useState","user","setUser","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","onAuthStateChanged","displayName","signOut","firebaseAuth","CreateReview","setYear","setSocial","setConvenience","setCleanliness","setNoise","setLounges","setQuality","createReview","newReview","post","push","dropDown","category","change","createreview","r","currentTarget","textbox","y","s","c","n","l","q","App","setSearchQuery","setDormName","setHasAC","setHasSingles","setHasDoubles","setHasTriples","setHasQuads","setHasSuites","setHasPods","setHasCorridors","setHasElevators","setHasDining","e","undefined","mews","ganedago","donlon","becker","cascadilla","Map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a98b116d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textbox\":\"createreview_textbox__3yLxv\",\"createreview\":\"createreview_createreview__3aWCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"review\":\"ReviewStyle_review__17uYx\"};","import { ChangeEventHandler } from 'react';\n\ntype Props = {\n  readonly searchQuery: string;\n  readonly handleFilterTextChange: (t: string) => void;\n  hasAC: boolean;\n  handleACCheckBoxChange: ChangeEventHandler<HTMLInputElement>;\n  hasSingles: boolean;\n  handleSinglesCheckBoxChange: ChangeEventHandler<HTMLInputElement>;\n  hasDoubles: boolean;\n  handleDoublesCheckBoxChange: ChangeEventHandler<HTMLInputElement>;\n  hasTriples: boolean;\n  handleTriplesCheckBoxChange: ChangeEventHandler<HTMLInputElement>;\n  hasQuads: boolean;\n  handleQuadsCheckBoxChange: ChangeEventHandler<HTMLInputElement>;\n  hasSuites: boolean;\n  handleSuitesCheckBoxChange: ChangeEventHandler<HTMLInputElement>;\n  hasPods: boolean;\n  handlePodsCheckBoxChange: ChangeEventHandler<HTMLInputElement>;\n  hasCorridors: boolean;\n  handleCorridorsCheckBoxChange: ChangeEventHandler<HTMLInputElement>;\n  hasElevators: boolean;\n  handleElevatorsCheckBoxChange: ChangeEventHandler<HTMLInputElement>;\n  hasDining: boolean;\n  handleDiningCheckBoxChange: ChangeEventHandler<HTMLInputElement>;\n}\n\nconst SearchBar = ({ searchQuery, handleFilterTextChange, \n  hasAC, handleACCheckBoxChange, \n  hasSingles, handleSinglesCheckBoxChange, \n  hasDoubles, handleDoublesCheckBoxChange, \n  hasTriples, handleTriplesCheckBoxChange,\n  hasQuads, handleQuadsCheckBoxChange,\n  hasSuites, handleSuitesCheckBoxChange,\n  hasPods, handlePodsCheckBoxChange,\n  hasCorridors, handleCorridorsCheckBoxChange,\n  hasElevators, handleElevatorsCheckBoxChange,\n  hasDining, handleDiningCheckBoxChange}: Props) => {\n  return (\n    <div>\n    <input\n      type=\"text\"\n      placeholder=\"Search for a dorm...\"\n      value={searchQuery}\n      onChange={(event) => handleFilterTextChange(event.target.value)}\n    />\n    <p>\n    <input\n      type=\"checkbox\"\n      checked={hasAC}\n      onChange={handleACCheckBoxChange}\n    />\n    Has AC\n    <input\n      type=\"checkbox\"\n      checked={hasSingles}\n      onChange={handleSinglesCheckBoxChange}\n    />\n    Singles\n\n    </p>\n    <p>\n    <input\n      type=\"checkbox\"\n      checked={hasDoubles}\n      onChange={handleDoublesCheckBoxChange}\n    />\n    Doubles\n    <input\n      type=\"checkbox\"\n      checked={hasTriples}\n      onChange={handleTriplesCheckBoxChange}\n    />\n    Triples\n    </p>\n    <p>\n    <input\n      type=\"checkbox\"\n      checked={hasQuads}\n      onChange={handleQuadsCheckBoxChange}\n    />\n    Quads\n    <input\n      type=\"checkbox\"\n      checked={hasSuites}\n      onChange={handleSuitesCheckBoxChange}\n    />\n    Suites\n    </p>\n\n    <p>\n    <input\n      type=\"checkbox\"\n      checked={hasPods}\n      onChange={handlePodsCheckBoxChange}\n    />\n    Pods\n    <input\n      type=\"checkbox\"\n      checked={hasCorridors}\n      onChange={handleCorridorsCheckBoxChange}\n    />\n    Corridors\n    </p>\n \n    <p>\n    <input\n      type=\"checkbox\"\n      checked={hasElevators}\n      onChange={handleElevatorsCheckBoxChange}\n    />\n    Elevators\n    <input\n      type=\"checkbox\"\n      checked={hasDining}\n      onChange={handleDiningCheckBoxChange}\n    />\n    Dining\n    </p>\n\n  </div>)\n}\n\nexport default SearchBar;","import axios from 'axios';\nimport { getAuth } from 'firebase/auth';\nimport { Stats } from 'fs';\nimport { ReviewWithID } from './App';\nimport styles from './ReviewStyle.module.css';\n\ntype Prop = {\n    cleanliness: string;\n    convenience: string;\n    lounges: string;\n    noise: string;\n    quality: string;\n    social: string;\n    year: string;\n    review: string;\n    localUserID: string;\n    userID: string;\n    postID: string;\n    dormName: string;\n\n    readonly reviews: ReviewWithID[];\n    readonly setReviews: (t: ReviewWithID[]) => void;\n}\n\n\nconst ReviewComponent = ({ cleanliness, convenience, lounges, noise, quality, social, year, review, localUserID, userID, postID, dormName, reviews, setReviews }: Prop) => {\n    const deleteReview = async (dormName: string) => {\n       await axios.delete(`/deleteReview/${dormName}/${postID}`);\n\n       const oldReviews: ReviewWithID[] = [...reviews];\n        const newReviews = oldReviews.filter(x => x.postID !== postID);\n        console.log(newReviews);\n        setReviews(newReviews);\n    }\n\n    let overallRating: Number = Number(((parseInt(cleanliness) + parseInt(convenience) + parseInt(lounges) + parseInt(noise) + parseInt(quality) + parseInt(social)) / 6).toFixed(1))\n    return (\n        <div>\n            <p className={styles.review} style={{ borderColor: (overallRating >= 4 ? \"#00ff00\" : overallRating >= 2 ? \"#FEDE00\" : \"#f50c0c\") }}>\n                <h3>Overall Quality: {overallRating}/5</h3>\n                {'Year Stayed: ' + year}<br></br><br></br>\n                {'Social Life: ' + social}<br></br>\n                {'Convenience: ' + convenience}<br></br>\n                {'Cleanliness: ' + cleanliness}<br></br>\n                {'Quietness: ' + noise}<br></br>\n                {'Lounges: ' + lounges}<br></br>\n                {'Quality/Appearance: ' + quality}<br></br><br></br>\n\n                <b>{'Comments: '}</b>{review}<br></br>\n                {localUserID === userID ? <input type=\"button\" value={\"Delete Review\"} onClick={(event) => {\n                deleteReview(dormName);\n            }} /> : <p>{/*localUserID + \"   /   \" + userID*/}</p>}\n                </p>\n            \n\n        </div>\n    )\n}\nexport default ReviewComponent","import { useEffect, useState } from 'react';\nimport { DormMap, ReviewWithID } from './App'\nimport ReviewComponent from './ReviewComponent'\nimport { getAuth } from \"firebase/auth\"\nimport CreateReview from './CreateReview';\n\n// This component will simply take in the name of the dorm that the user clicked on to display information about the dorm.\n// This component will also take in the overall reviews for the dorm\n\ntype Props = {\n  readonly reviews: ReviewWithID[];\n  readonly dormName: string;\n  readonly setReview: (t: ReviewWithID[]) => void;\n}\n\nconst DormPage = ({ reviews, dormName, setReview }: Props) => {\n  //const [reviews, setReview] = useState<ReviewWithID[]>([]);\n\n  const uid = () => (getAuth().currentUser !== null ? getAuth().currentUser!.uid! : \"\");\n\n  useEffect(() => {\n    document.title = dormName + \" - CUDormReviews\";\n  })\n\n  useEffect(() => {\n    fetch(\"/getReviews/\" + dormName)\n      .then((res) => res.json())\n      .then((data) => {\n        setReview(data);\n      });\n  }, [dormName/*, reviews*/]);\n\n  return (\n    <div>\n      {dormName.length > 0 ?\n        <div>\n          <h2>{DormMap.get(dormName)?.name}</h2>\n          <h4>{DormMap.get(dormName)?.location}</h4>\n          <img src={DormMap.get(dormName)?.picLink} alt={DormMap.get(dormName)?.name}></img>\n          <p>Number of Residents: {DormMap.get(dormName)?.residents}</p>\n          <p>Has Singles: {DormMap.get(dormName)?.singles ? \"Yes\" : \"No\"}</p>\n          <p>Has Doubles: {DormMap.get(dormName)?.doubles ? \"Yes\" : \"No\"}</p>\n          <p>Has Triples: {DormMap.get(dormName)?.triples ? \"Yes\" : \"No\"}</p>\n          <p>Has Quads: {DormMap.get(dormName)?.quads ? \"Yes\" : \"No\"}</p>\n          <p>Rooms arranged in Suites: {DormMap.get(dormName)?.suites ? \"Yes\" : \"No\"}</p>\n          <p>Rooms arranged in Pods: {DormMap.get(dormName)?.pods ? \"Yes\" : \"No\"}</p>\n          <p>Rooms arranged along Corridors: {DormMap.get(dormName)?.corridors ? \"Yes\" : \"No\"}</p>\n          <p>Has AC: {DormMap.get(dormName)?.ac ? \"Yes\" : \"No\"}</p>\n          <p>Has Elevators: {DormMap.get(dormName)?.elevators ? \"Yes\" : \"No\"}</p>\n          <p>Has a Dining Hall: {DormMap.get(dormName)?.dining ? \"Yes\" : \"No\"}</p>\n          <a href={DormMap.get(dormName)?.housingWebsite}>Read more on the Housing webpage</a>\n\n          <p>Social Life: {(reviews.reduce((sum, curr) => sum + parseInt(curr.social), 0) / reviews.length).toFixed(1)}</p>\n          <p>Convenience: {(reviews.reduce((sum, curr) => sum + parseInt(curr.convenience), 0) / reviews.length).toFixed(1)}</p>\n          <p>Cleanliness: {(reviews.reduce((sum, curr) => sum + parseInt(curr.cleanliness), 0) / reviews.length).toFixed(1)}</p>\n          <p>Quietness: {(reviews.reduce((sum, curr) => sum + parseInt(curr.noise), 0) / reviews.length).toFixed(1)}</p>\n          <p>Lounges: {(reviews.reduce((sum, curr) => sum + parseInt(curr.lounges), 0) / reviews.length).toFixed(1)}</p>\n          <p>Quality/Appearance: {(reviews.reduce((sum, curr) => sum + parseInt(curr.quality), 0) / reviews.length).toFixed(1)}</p>\n          {reviews.length > 0 ?\n            reviews.map((review, idx) => (\n              <ReviewComponent key={idx} {...review} localUserID={uid()} dormName={dormName} reviews={reviews} setReviews={setReview}/>\n          )) : <h4>No Reviews for {dormName} :(<br></br>Be the first to add a review</h4>}\n\n\n        </div> : <p></p>}\n    </div>\n  )\n}\n\nexport default DormPage;","import { DormMap, DormArray, ReviewWithID, Dorm, Filter } from './App'\n\n/* TODO:\n- Add the checkboxes so, in addition to the search query, the dorms can be filtered by certain properties\n*/\n\ntype Props = {\n  readonly searchQuery: string;\n  readonly handleClick: (t: string) => void;\n  searchFilter: Filter\n}\n\nconst HomePage = ({ searchQuery, handleClick, searchFilter }: Props) => {\n\n  return (\n    <div>\n      <div>\n        {DormArray.filter(x => x.name.toLowerCase().includes(searchQuery.toLowerCase()) && \n        (!searchFilter.hasAC || x.ac) &&\n        (!searchFilter.hasSingles || x.singles) &&\n        (!searchFilter.hasDoubles || x.doubles) &&\n        (!searchFilter.hasTriples || x.triples) &&\n        (!searchFilter.hasQuads || x.quads) &&\n        (!searchFilter.hasSuites || x.suites) &&\n        (!searchFilter.hasPods || x.pods) &&\n        (!searchFilter.hasCorridors || x.corridors) &&\n        (!searchFilter.hasElevators || x.elevators) &&\n        (!searchFilter.hasDining || x.dining) \n        ).map((data: Dorm) => (\n          <input type=\"button\" value={data.name} onClick={(event) => {\n            handleClick(data.name);\n          }} />))\n        }\n      </div>\n\n      <div>\n        {/*Insert checkboxes here*/}\n      </div>\n    </div>\n  )\n}\n\nexport default HomePage;","import React, { useState, useEffect } from 'react';\nimport 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport {\n  User,\n  GoogleAuthProvider,\n  onAuthStateChanged,\n  getAuth,\n  signOut,\n} from 'firebase/auth';\nimport FirebaseAuth from 'react-firebaseui/FirebaseAuth';\nimport { ReviewWithID } from './App';\n\nconst firebaseConfig = {\n  // put firebase config in here.\n  // You can find the config in Project Settings > General\n  // and choose the Config option in Firebase SDK snippet\n  apiKey: \"AIzaSyApFN9JTuIKz_4JbMOntUKfb6o1HYSqE5I\",\n  authDomain: \"webdeva2-478bd.firebaseapp.com\",\n  projectId: \"webdeva2-478bd\",\n  storageBucket: \"webdeva2-478bd.appspot.com/\",\n  messagingSenderId: \"544198736831\",\n  appId: \"1:544198736831:web:3e9c78a50fbda7b61bbf0a\",\n};\n\nconst firebase = initializeApp(firebaseConfig);\n\nconst auth = getAuth(firebase);\n\ntype Props = {\n  readonly children: React.ReactNode;\n  readonly dormName: string;\n  readonly setReview: (t: ReviewWithID[]) => void;\n};\n\nconst Authenticated = ({ children, dormName, setReview }: Props) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const uiConfig = {\n    signInFlow: 'popup',\n    signInOptions: [GoogleAuthProvider.PROVIDER_ID],\n  };\n\n  useEffect(() => {\n    onAuthStateChanged(auth, setUser)\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/getReviews/\" + dormName)\n      .then((res) => res.json())\n      .then((data) => {\n        setReview(data);\n      });\n  }, [user]);\n\n  return (\n    <>\n      {user ? (\n        <>\n          <h2>Hi, {user.displayName}!</h2>\n          <button onClick={() =>\n          {signOut(auth)\n            //window.location.reload();\n          }}>Sign Out</button>\n          {children}\n        </>\n      ) : (\n        <div>\n          <h5>To add reviews or edit your existing reviews, please log in below!</h5>\n          <FirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Authenticated;","import { useState, ChangeEvent } from 'react';\nimport axios from \"axios\";\nimport styles from './createreview.module.css';\nimport { getAuth } from 'firebase/auth';\nimport { ReviewWithID } from './App';\n// import ReviewButtonSet from './ReviewButtonSet';\n\ntype Prop = {\n    dormName: string\n    readonly reviews: ReviewWithID[];\n    readonly setReviews: (t: ReviewWithID[]) => void;\n}\n\nconst CreateReview = ({dormName, reviews, setReviews}: Prop) => {\n    const [review, setReview] = useState('');\n    const [year, setYear] = useState('');\n    const [social, setSocial] = useState(\"1\");\n    const [convenience, setConvenience] = useState(\"1\");\n    const [cleanliness, setCleanliness] = useState(\"1\");\n    const [noise, setNoise] = useState(\"1\");\n    const [lounges, setLounges] = useState('1');\n    const [quality, setQuality] = useState('1');\n\n    const handleReviewChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\n      const r = event.currentTarget.value;\n      setReview(r);\n    };\n\n    const handleYearChange = (event: ChangeEvent<HTMLInputElement>) => {\n      const y = event.currentTarget.value;\n      setYear(y);\n    };\n\n    const handleSocialChange = (event: ChangeEvent<HTMLSelectElement>) => {\n        const s = event.currentTarget.value;\n        setSocial(s);\n    };\n\n    const handleConvenienceChange = (event: ChangeEvent<HTMLSelectElement>) => {\n        const c = event.currentTarget.value;\n        setConvenience(c);\n    };\n\n    const handleCleanlinessChange = (event: ChangeEvent<HTMLSelectElement>) => {\n        const c = event.currentTarget.value;\n        setCleanliness(c);\n    };\n\n    const handleNoiseChange = (event: ChangeEvent<HTMLSelectElement>) => {\n        const n = event.currentTarget.value;\n        setNoise(n);\n    };\n\n    const handleLoungesChange = (event: ChangeEvent<HTMLSelectElement>) => {\n        const l = event.currentTarget.value;\n        setLounges(l);\n    };\n\n    const handleQualityChange = (event: ChangeEvent<HTMLSelectElement>) => {\n        const q = event.currentTarget.value;\n        setQuality(q);\n    };\n    \n    // Creates new review in database in current dorm's collection with post request \n    const createReview = async (dormName: string) => {\n        let userID = \"\";\n        const auth = getAuth();\n        const user = auth.currentUser;\n        if (user !== null) {userID = user.uid};\n        const newReview = {cleanliness, convenience, lounges, noise, quality, social , year, review, userID, postID: \"null\"};\n        const { data } = await axios.post<string>(`/createReview/${dormName}`, newReview);\n\n        const oldReviews: ReviewWithID[] = [...reviews];\n        oldReviews.push(newReview);\n        setReviews(oldReviews);\n    };\n   \n    // Creates a drop down menu for a given review category\n    const dropDown = (title: string, category: string, name: string, change: (event: ChangeEvent<HTMLSelectElement>) => void ) => {\n        return (\n        <div>\n        <span>{title}\n        <select value = {category} onChange={change}>\n            <option value = \"1\">1 - Least {name}</option>\n            <option value = \"2\">2</option>\n            <option value = \"3\">3</option>\n            <option value = \"4\">4</option>\n            <option value = \"5\">5 - Most {name}</option>\n        </select>\n        </span>\n        <br></br>\n        </div>);\n    };\n\n    return (\n    <div className = {styles.createreview}>\n        <h3>Leave a Review</h3>\n        <textarea\n            placeholder=\"Enter review here...\"\n            value={review}\n            onChange={handleReviewChange}\n            className = {styles.textbox}\n        />\n        <br></br>\n        <span>Year Stayed &emsp;\n        <input\n            type=\"text\"\n            value={year}\n            onChange={handleYearChange}\n            \n        />\n        </span>\n           \n        {dropDown(\"Social Life\", social, \"social\", handleSocialChange)}\n\n        {dropDown(\"Convenience\", convenience, \"convenient\", handleConvenienceChange)}\n\n        {dropDown(\"Cleanliness\", cleanliness, \"clean\", handleCleanlinessChange)}\n\n        {dropDown(\"Quietness\", noise, \"quiet\", handleNoiseChange)}\n\n        {dropDown(\"Lounges\", lounges, \"lounge space\", handleLoungesChange)}\n\n        {dropDown(\"Quality/Appearance\", quality, \"quality\", handleQualityChange)}\n\n        <button onClick={() => {\n            console.log(social)\n            console.log(convenience)\n            console.log(cleanliness)\n            console.log(noise)\n            console.log(lounges)\n            console.log(quality)\n\n            createReview(dormName);\n\n            setReview(\"\");\n            setYear(\"\");\n            setSocial(\"1\");\n            setConvenience(\"1\");\n            setCleanliness(\"1\");\n            setNoise(\"1\");\n            setLounges(\"1\");\n            setQuality(\"1\")\n            }}>\n            Submit\n        </button>\n    </div>)}\n    \nexport default CreateReview;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SearchBar from './SearchBar';\nimport DormPage from './DormPage';\nimport HomePage from './HomePage';\nimport EditReviewsAuth from './EditReviewsAuth';\nimport Authenticated from './Authenticated';\nimport CreateReview from './CreateReview';\n\n// To be used by other files\nexport type ReviewWithID = {\n  cleanliness: string;\n  convenience: string;\n  lounges: string;\n  noise: string;\n  quality: string;\n  social: string;\n  year: string;\n  review: string;\n  userID: string;\n  postID: string;\n}\n\nexport type Filter = {\n  hasAC: boolean\n  hasSingles: boolean;\n  hasDoubles: boolean;\n  hasTriples: boolean;\n  hasQuads: boolean;\n  hasSuites: boolean;\n  hasPods: boolean;\n  hasCorridors: boolean;\n  hasElevators: boolean;\n  hasDining: boolean;\n}\n\nlet searchFilter: Filter = {\n  hasAC: false,\n  hasSingles: false,\n  hasDoubles: false,\n  hasTriples: false,\n  hasQuads: false,\n  hasSuites: false,\n  hasPods: false,\n  hasCorridors: false,\n  hasElevators: false,\n  hasDining: false\n}\n\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [dormName, setDormName] = useState(\"\");\n  const [uid, setUid] = useState(\"\");\n  const [reviews, setReview] = useState<ReviewWithID[]>([]);\n  const [hasAC, setHasAC] = useState(false);\n  const [hasSingles, setHasSingles] = useState(false);\n  const [hasDoubles, setHasDoubles] = useState(false);\n  const [hasTriples, setHasTriples] = useState(false);\n  const [hasQuads, setHasQuads] = useState(false);\n  const [hasSuites, setHasSuites] = useState(false);\n  const [hasPods, setHasPods] = useState(false);\n  const [hasCorridors, setHasCorridors] = useState(false);\n  const [hasElevators, setHasElevators] = useState(false);\n  const [hasDining, setHasDining] = useState(false);\n  searchFilter = {hasAC, hasSingles, hasDoubles, hasTriples, hasQuads, hasSuites, hasPods, hasCorridors, hasElevators, hasDining}\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>CUDormReviews</h1>\n        <SearchBar\n          searchQuery={searchQuery}\n          handleFilterTextChange={setSearchQuery}\n          hasAC = {hasAC}\n          handleACCheckBoxChange={(e) => setHasAC(e.target.checked)}\n          hasSingles = {hasSingles}\n          handleSinglesCheckBoxChange={(e) => setHasSingles(e.target.checked)}\n          hasDoubles = {hasDoubles}\n          handleDoublesCheckBoxChange={(e) => setHasDoubles(e.target.checked)}\n          hasTriples = {hasTriples}\n          handleTriplesCheckBoxChange={(e) => setHasTriples(e.target.checked)}\n          hasQuads = {hasQuads}\n          handleQuadsCheckBoxChange={(e) => setHasQuads(e.target.checked)}\n          hasSuites = {hasSuites}\n          handleSuitesCheckBoxChange={(e) => setHasSuites(e.target.checked)}\n          hasPods = {hasPods}\n          handlePodsCheckBoxChange={(e) => setHasPods(e.target.checked)}\n          hasCorridors = {hasCorridors}\n          handleCorridorsCheckBoxChange={(e) => setHasCorridors(e.target.checked)}\n          hasElevators = {hasElevators}\n          handleElevatorsCheckBoxChange={(e) => setHasElevators(e.target.checked)}\n          hasDining = {hasDining}\n          handleDiningCheckBoxChange={(e) => setHasDining(e.target.checked)}\n        />\n        <HomePage\n          searchQuery={searchQuery}\n          handleClick={setDormName}\n          searchFilter={searchFilter}\n        />\n        <DormPage\n          dormName={dormName}\n          reviews={reviews}\n          setReview={setReview}\n          //uid={uid}\n        />\n        <Authenticated dormName={dormName} setReview={setReview} children={undefined}/>\n          {dormName.length > 0 ? \n            <CreateReview\n            dormName={dormName}\n            reviews={reviews}\n            setReviews={setReview}\n            //uid={uid}\n          /> : <h3>Search for a dorm above!</h3>\n          }\n          \n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n// BEGIN HARDCODED DATA\nexport type Dorm = {\n  singles: boolean;\n  doubles: boolean;\n  triples: boolean;\n  quads: boolean;\n  suites: boolean;\n  pods: boolean;\n  corridors: boolean;\n  residents: number;\n  ac: boolean;\n  elevators: boolean;\n  dining: boolean;\n  housingWebsite: string;\n  picLink: string;\n  name: string;\n  location: string;\n}\n\nconst mews: Dorm = {\n  singles: true,\n  doubles: true,\n  triples: false,\n  quads: false,\n  suites: false,\n  pods: true,\n  corridors: false,\n  residents: 260,\n  ac: true,\n  elevators: true,\n  dining: false,\n  housingWebsite: \"https://scl.cornell.edu/residential-life/housing/campus-housing/first-year-undergraduates/residence-halls/mews-hall\",\n  picLink: \"https://scl.cornell.edu/sites/scl/files/styles/portrait_image/public/2019-09/Mews_1.png?h=4380f786&itok=KFIPyz0k\",\n  name: \"Mews Hall\",\n  location: \"North Campus\"\n}\n\nconst ganedago: Dorm = {\n  singles: true,\n  doubles: true,\n  triples: false,\n  quads: false,\n  suites: true,\n  pods: false,\n  corridors: false,\n  residents: 520,\n  ac: true,\n  elevators: true,\n  dining: false,\n  housingWebsite: \"https://scl.cornell.edu/residential-life/housing/campus-housing/first-year-undergraduates/residence-halls/ganedago-hall\",\n  picLink: \"https://scl.cornell.edu/sites/scl/files/styles/portrait_image/public/2020-10/SophSiteRendering.JPG?h=473ee7f7&itok=A__s8kaO\",\n  name: \"Ganędagǫ: Hall\",\n  location: \"North Campus\"\n}\n\nconst donlon: Dorm = {\n  singles: true,\n  doubles: true,\n  triples: false,\n  quads: true,\n  suites: false,\n  pods: false,\n  corridors: true,\n  residents: 450,\n  ac: false,\n  elevators: true,\n  dining: false,\n  housingWebsite: \"https://scl.cornell.edu/residential-life/housing/campus-housing/first-year-undergraduates/residence-halls/mary-donlon-hall\",\n  picLink: \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Mary_Donlon_Hall%2C_Cornell_University.jpg/800px-Mary_Donlon_Hall%2C_Cornell_University.jpg\",\n  name: \"Mary Donlon Hall\",\n  location: \"North Campus\"\n}\n\nconst becker: Dorm = {\n  singles: true,\n  doubles: true,\n  triples: false,\n  quads: false,\n  suites: true,\n  pods: false,\n  corridors: true,\n  residents: 350,\n  ac: true,\n  elevators: true,\n  dining: true,\n  housingWebsite: \"https://scl.cornell.edu/residential-life/housing/campus-housing/upperlevel-undergraduates/west-campus-house-system/carl-becker-house\",\n  picLink: \"https://scl.cornell.edu/sites/scl/files/styles/portrait_image/public/2019-11/Screen%20Shot%202019-11-08%20at%2011.22.01%20AM.png?h=76e9374a&itok=VerXzdGa\",\n  name: \"Carl Becker House\",\n  location: \"West Campus\"\n}\n\nconst cascadilla: Dorm = {\n  singles: true,\n  doubles: true,\n  triples: false,\n  quads: false,\n  suites: false,\n  pods: false,\n  corridors: true,\n  residents: 366,\n  ac: false,\n  elevators: true,\n  dining: false,\n  housingWebsite: \"https://scl.cornell.edu/residential-life/housing/campus-housing/upperlevel-undergraduates/residence-halls/cascadilla-hall\",\n  picLink: \"https://scl.cornell.edu/sites/scl/files/styles/portrait_image/public/2019-11/Screen%20Shot%202019-11-08%20at%2011.27.56%20AM.png?h=5b16f0df&itok=TklGYZ07\",\n  name: \"Cascadilla Hall\",\n  location: \"South Campus\"\n}\n\nexport const DormMap = new Map([\n  [\"Mews Hall\", mews],\n  [\"Ganędagǫ: Hall\", ganedago],\n  [\"Mary Donlon Hall\", donlon],\n  [\"Carl Becker House\", becker],\n  [\"Cascadilla Hall\", cascadilla]\n])\n\nexport const DormArray: Array<Dorm> = [mews, ganedago, donlon, becker, cascadilla];","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}